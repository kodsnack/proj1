{"version":3,"sources":["proj1/core.cljs"],"mappings":";;;AAGA,AAAKA,AAAO,AAAAC,AAAA,AAA8B,AAAA,AAAA,AAAA,AAAA,AAAG,AAAIC,AAAuB,AAAIA;AAC5E,AAAA,AAAM,AAAA,AAAIF;AACV,AAAKG,AAAM,AAAAC;AACX,AAAKC,AAAS,AAAAC,AAAA,AAAA,AAAA;AACd,AAAKC,AAAS,AAAAC,AAAA,AAAsC,AAAAC,AAAA,AAAA,AAAA;AACpD,AAAKC,AAAK,AAAAC,AAAaN,AAASE;AAChC,AAAMJ,AAAMO;AACZ,AAAKE,AAAS,AAAAC,AAAA,AAAA;AACd,AAAgBD,AAAS,AAAIV;AAC7B,AAAUU,AAAS,AAAIV,AAAuB,AAAIA;AAClD,AAAA,AAAIY,AAA+B,AAAIF;AACvC,AAAIA,AAAiBT,AAAMH;AAE3B,AAAKe,AAAK;AAAA,AAAO,AAAA,AAACC;;AAElB,AAAA,AAAA,AAAA,AAAAC,AAAaC;;AAAb,AAAA,AAAA,AAAaA,AAEX,AAAaC,AAAEC,AAAOC;AAAtB,AAAA,AAAA,AAAaF;AAAb,AACE,AAAA,AAACG,AAAOF;;AACR,AAACE,AAAOF,AAAO,AAAA,AAAA,AAAK,AAAKD,AAAO,AAAKA,AAAO,AAAKA;;AACjD,AAAA,AAACG,AAAOF;;AAEZ","names":["proj1.core/camera","js/module$node_modules$three$build$three.PerspectiveCamera","js/window","proj1.core/scene","js/module$node_modules$three$build$three.Scene","proj1.core/geometry","js/module$node_modules$three$build$three.BoxBufferGeometry","proj1.core/material","js/module$node_modules$three$build$three.MeshBasicMaterial","js/module$node_modules$three$build$three.Color","proj1.core/mesh","js/module$node_modules$three$build$three.Mesh","proj1.core/renderer","js/module$node_modules$three$build$three.WebGLRenderer","js/document","proj1.core/init","cljs.core.println","cljs.core/PROTOCOL_SENTINEL","js/module$node_modules$three$build$three.Vector3","a","writer","opts","cljs.core/-write"],"sourcesContent":["(ns proj1.core\n  (:require [\"three\" :as THREE]))\n\n(def camera (THREE/PerspectiveCamera. 70, (/ (.. js/window -innerWidth) (.. js/window -innerHeight), 1, 1000)))\n(set! (.. camera -position -z) 400)\n(def scene (THREE/Scene.))\n(def geometry (THREE/BoxBufferGeometry. 200 200 200))\n(def material (THREE/MeshBasicMaterial. #js {:color (THREE/Color. 0 100 100)}))\n(def mesh (THREE/Mesh. geometry material))\n(.add scene mesh)\n(def renderer (THREE/WebGLRenderer. #js {:antialias true}))\n(.setPixelRatio renderer (.. js/window -devicePixelRatio))\n(.setSize renderer (.. js/window -innerWidth) (.. js/window -innerHeight))\n(.. js/document -body (appendChild (.. renderer -domElement)))\n(.. renderer (render scene camera))\n\n(def init (fn [] (println \"Hej\")))\n\n(extend-type THREE/Vector3\n  IPrintWithWriter\n  (-pr-writer [a writer opts]\n    (-write writer \"#Vector3[\")\n    (-write writer (str (.-x a) \" \" (.-y a) \" \" (.-z a)))\n    (-write writer \"]\")))\n\n(comment\n  (defn init\n    []\n    (println \"Hej!\"))\n  1\n\n  (def v (THREE/Vector3. 1 2 3))\n\n  (.-name (.-x v))\n  (.. v -x -name)\n\n  \"2\"\n  :keyword\n  Hej\n  (def Hej \"Grattis\")\n  init\n  'init\n  (init))"]}